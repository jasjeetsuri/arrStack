version: '3.8'
services:
  decluttarr:
    image: ghcr.io/manimatter/decluttarr:latest
    container_name: decluttarr
    restart: always
    env_file:
      - stack.env
    environment:
      TZ: Europe/London
      PUID: 1000
      PGID: 1000

      ## General
      TEST_RUN: True
      SSL_VERIFICATION: False
      LOG_LEVEL: INFO

      ## Features
      REMOVE_TIMER: 10
      REMOVE_FAILED: True
      REMOVE_FAILED_IMPORTS: True
      REMOVE_METADATA_MISSING: True
      REMOVE_MISSING_FILES: True
      REMOVE_ORPHANS: True
      REMOVE_SLOW: True
      REMOVE_STALLED: True
      REMOVE_UNMONITORED: False
      RUN_PERIODIC_RESCANS: '
        {
        "SONARR": {"MISSING": false, "CUTOFF_UNMET": false, "MAX_CONCURRENT_SCANS": 3, "MIN_DAYS_BEFORE_RESCAN": 7},
        "RADARR": {"MISSING": false, "CUTOFF_UNMET": false, "MAX_CONCURRENT_SCANS": 3, "MIN_DAYS_BEFORE_RESCAN": 7}
        }'

      # Feature Settings
      PERMITTED_ATTEMPTS: 3
      NO_STALLED_REMOVAL_QBIT_TAG: Don't Kill
      MIN_DOWNLOAD_SPEED: 100
      FAILED_IMPORT_MESSAGE_PATTERNS: '
        [
        "Not a Custom Format upgrade for existing",
        "Not an upgrade for existing"
        ]'


      ## Radarr
      RADARR_URL: http://gluetun:7878
      RADARR_KEY: ${RADARR_API_KEY}

      ## Sonarr
      SONARR_URL: http://gluetun:8989
      SONARR_KEY: ${SONARR_API_KEY}



# powershell - https://hub.docker.com/_/microsoft-powershell
  powershell:
    container_name: powershell
    image: mcr.microsoft.com/powershell:latest
    restart: "no"
    # optional
#    logging:
#      driver: json-file
#      options:
#        max-file: 10
#        max-size: 200k
#    # optional
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /home/jas/arr/powershell:/scripts
    command: pwsh /scripts/Upgradinatorr/upgradinatorr.ps1 -ApplicationList sonarr,radarr


  tweakio:
    image: varthe/tweakio:latest
    container_name: tweakio
    #ports:
    #  - "3185:3185"
    volumes:
      - /home/jas/arr/tweakio/config.yaml:/app/config.yaml
    network_mode: "service:gluetun"

  kometa:
    container_name: kometa
    image: kometateam/kometa
    environment:
      - KOMETA_RUN=true
    volumes:
      - /home/jas/arr/kometa/config:/config
    restart: unless-stopped
    
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/London
      - PORT=5055 #optional
    ports:
      - 5055:5055
    volumes:
      - /home/jas/arr/overseerr/config:/app/config
    restart: unless-stopped

  plex_authentication:
    container_name: plex_authentication_service
    image: ghcr.io/westsurname/scripts/plex_authentication:latest
    pull_policy: always
    volumes:
      - /home/jas/arr/plex_auth/shared/tokens.json:/app/shared/tokens.json
      - /home/jas/arr/plex_auth/sockets:/app/sockets
    env_file:
      - stack.env
    restart: unless-stopped

  plex_request:
    container_name: plex_request_service
    image: ghcr.io/westsurname/scripts/plex_request:latest
    pull_policy: always
    volumes:
      - /home/jas/arr/plex_auth/shared/tokens.json:/app/shared/tokens.json
      - /home/jas/arr/plex_auth/sockets:/app/sockets
    env_file:
      - stack.env
    restart: unless-stopped

  plex_request_nginx:
    container_name: plex_request_nginx_service
    image: ghcr.io/westsurname/scripts/plex_request_nginx:latest
    pull_policy: always
    volumes:
      - ${PLEX_SERVER_PATH}:/plex:ro
      - /home/jas/arr/plex_auth/sockets:/app/sockets
    ports:
      - 32400:8000
    env_file:
      - stack.env
    restart: unless-stopped
    depends_on:
      - plex_request
      - plex_authentication

  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - /home/jas/arr/tautulli/config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    ports:
      - 8181:8181

  #recyclarr:
   # image: ghcr.io/recyclarr/recyclarr
   # container_name: recyclarr
   # user: 1000:1000
    #volumes:
    #  - /home/jas/arr/recyclarr/config:/config
   # environment:
    #  - TZ=Europe/London


  autoscan:
    container_name: autoscan
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 3030/tcp
    hostname: autoscan
    image: saltydk/autoscan:latest
    restart: unless-stopped
    volumes:
      - /mnt:/mnt
      - /home/jas/arr/autoscan:/config
    depends_on:
      - rclone
      - plex
      - radarr
      - sonarr

  plex:
    container_name: plex
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PLEX_UID=1000
      - PLEX_GID=1000
    env_file:
      - stack.env
    ports:
      - 1900:1900/udp
      - 32401:32400/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469/tcp
      - 8324:8324/tcp
    hostname: plex
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    volumes:
      - /dev/shm:/dev/shm
      - /mnt/local/transcodes/plex:/transcode
      - /mnt:/mnt
      - /home/jas/arr/plex:/config
      - /opt/scripts:/scripts
      - /home/jas/arr/infinite:/infiniteplexlibrary
    depends_on:
      - rclone

  prowlarr:
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
    #ports:
    #  - 9696:9696/tcp
    #hostname: prowlarr
    image: ghcr.io/hotio/prowlarr:release
    restart: unless-stopped
    volumes:
      - /mnt:/mnt:rslave
      - /home/jas/arr/prowlarr/Definitions/Custom:/Custom
      - /home/jas/arr/prowlarr:/config
    network_mode: "service:gluetun"

  radarr:
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
    #ports:
    #  - 7878:7878/tcp
    #hostname: radarr
    image: ghcr.io/hotio/radarr:release
    restart: unless-stopped
    volumes:
      - /mnt:/mnt:rslave
      - /home/jas/arr/radarr:/config
      - /opt/scripts:/scripts
      - /usr/bin/rclone:/usr/bin/rclone
    depends_on:
      - rclone
    network_mode: "service:gluetun"
 
  sonarr:
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
    #ports:
    #  - 8989:8989/tcp
    #hostname: sonarr
    image: ghcr.io/hotio/sonarr:release
    restart: unless-stopped
    volumes:
      - /mnt:/mnt:rslave
      - /opt/scripts:/scripts
      - /home/jas/arr/sonarr:/config
      - /usr/bin/rclone:/usr/bin/rclone
    depends_on:
      - rclone
    network_mode: "service:gluetun"
  #zurg:
  #  image: ghcr.io/debridmediamanager/zurg:latest
  #  container_name: zurg
  #  restart: unless-stopped
    #ports:
    # - 9991:9991
  #  volumes:
  #    - /home/jas/arr/zurg/config.yml:/app/config.yml
  #    - /home/jas/arr/zurg/data:/app/data
  #    - /home/jas/arr/zurg/dump:/app/dump
  #    - ./plex_update.sh:/app/plex_update.sh
  #  network_mode: "service:gluetun"

  #decypharr:
  #  image: cy01/blackhole:beta # or cy01/blackhole:beta
  #  container_name: decypharr
  #  ports:
  #    - "8283:8282" # qBittorrent
  #    #- "8183:8181" # Proxy
  #  user: "1000:1000"
  #  volumes:
  #    - /mnt/:/mnt:rslave
  #    - /home/jas/arr/decypharr/:/app # config.json must be in this directory
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - UMASK=002
  #    - QBIT_PORT=8282 # qBittorrent Port. This is optional. You can set this in the config file
  #    - PORT=8181 # Proxy Port. This is optional. You can set this in the config file
  #  restart: unless-stopped

  decypharrExp:
    image: cy01/blackhole:experimental # or cy01/blackhole:beta
    container_name: decypharrExp
    user: "1000:1000"
    volumes:
      - /mnt/:/mnt:rslave
      - /home/jas/arr/decypharrexp/:/app # config.json must be in this directory
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - QBIT_PORT=8682 # qBittorrent Port. This is optional. You can set this in the config file
      - PORT=8181 # Proxy Port. This is optional. You can set this in the config file
    restart: unless-stopped
    network_mode: "service:gluetun"
    
  rclone:
    image: rclone/rclone:latest
    container_name: rclone
    restart: unless-stopped
    environment:
      TZ: Europe/London
      PUID: 1000
      PGID: 1000
    volumes:
      - /mnt/remote/realdebrid:/data:rshared
      - /home/jas/arr/zurg/rclone.conf:/config/rclone/rclone.conf
      - /mnt:/mnt:rslave
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    devices:
      - /dev/fuse:/dev/fuse:rwm
    #command: "mount zurg: /data --allow-non-empty --allow-other --uid=1000 --gid=1000 --dir-cache-time 10s --bwlimit 150M"
    command: "mount decypharr: /data --allow-non-empty --allow-other --uid=1000 --gid=1000 --dir-cache-time 10s --bwlimit 152M --rc --rc-addr=0.0.0.0:5572 --rc-user=admin --rc-pass=password"

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 3185:3185/tcp # tweakio
      - 9991:9991/tcp # zurg
      - 8282:8282 # qBittorrent
      - 7878:7878
      - 9696:9696
      - 8989:8988
    volumes:
      - /home/jas/arr/gluetun:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=wireguard
      # Wireguard:
      - WIREGUARD_PRIVATE_KEY=
      #- WIREGUARD_ADDRESSES=194.35.232.13
      # Timezone for accurate log times
      - TZ=Europe/London
      - SERVER_COUNTRIES=Netherlands
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=
      - DNS_ADDRESS=127.0.0.11
    
